package com.alan.clients.module.impl.exploit;

import com.alan.clients.api.Rise;
import com.alan.clients.module.Module;
import com.alan.clients.module.api.Category;
import com.alan.clients.module.api.ModuleInfo;
import com.alan.clients.module.impl.exploit.disabler.GrimACDisabler;
import com.alan.clients.module.impl.exploit.disabler.KeepAliveDisabler;
import com.alan.clients.module.impl.exploit.disabler.RiseBalanceDisabler;
import com.alan.clients.value.Value;
import com.alan.clients.value.impl.BooleanValue;

@Rise
@ModuleInfo(name = "module.combat.disabler.name", description = "module.exploit.disabler.description", category = Category.EXPLOIT)
public class Disabler extends Module {
    public final BooleanValue grimac =
            new BooleanValue("GrimAC", this, false, new GrimACDisabler("", this));

    private final BooleanValue riseBalance =
            new BooleanValue("Rise Balance Timer Abuse", this, false, new RiseBalanceDisabler("", this));


    private final BooleanValue cancelKeepAlives =
            new BooleanValue("Cancel Keep Alive", this, false, new KeepAliveDisabler("", this));

    private final BooleanValue deprecated =
            new BooleanValue("Deprecated", this, false);


    public Disabler() {
        boolean deprecated = false;

        for (Value<?> value : getValues()) {
            if (deprecated) value.hideIf = () -> !this.deprecated.getValue();
            if (value.getName().equalsIgnoreCase("deprecated")) deprecated = true;
        }
    }
}
